#include <stdio.h>
#include <string.h>

// Super Trunfo - N√≠vel Mestre
// Compara√ß√£o de dois atributos com menus din√¢micos e operador tern√°rio
// Autor: David Newton (baseado nas vers√µes anteriores)

int main() {
    // Declara√ß√£o das vari√°veis
    char estado1[3], estado2[3], codigo1[3], codigo2[3], cidade1[30], cidade2[30];
    int populacao1, populacao2, pontosT1, pontosT2;
    float area1, area2, pib1, pib2, dens1, dens2, ppc1, ppc2;

    // ======= CADASTRO DAS CARTAS =======
    printf("=== Cadastro da Primeira Cidade ===\n");
    printf("Estado: "); scanf("%s", estado1);
    printf("C√≥digo: "); scanf("%s", codigo1);
    printf("Nome da Cidade: "); scanf("%s", cidade1);
    printf("Popula√ß√£o: "); scanf("%d", &populacao1);
    printf("√Årea (km¬≤): "); scanf("%f", &area1);
    printf("PIB (em bilh√µes): "); scanf("%f", &pib1);
    printf("Pontos tur√≠sticos: "); scanf("%d", &pontosT1);

    printf("\n=== Cadastro da Segunda Cidade ===\n");
    printf("Estado: "); scanf("%s", estado2);
    printf("C√≥digo: "); scanf("%s", codigo2);
    printf("Nome da Cidade: "); scanf("%s", cidade2);
    printf("Popula√ß√£o: "); scanf("%d", &populacao2);
    printf("√Årea (km¬≤): "); scanf("%f", &area2);
    printf("PIB (em bilh√µes): "); scanf("%f", &pib2);
    printf("Pontos tur√≠sticos: "); scanf("%d", &pontosT2);

    // ======= C√ÅLCULOS =======
    dens1 = populacao1 / area1;
    dens2 = populacao2 / area2;
    ppc1 = pib1 / populacao1;
    ppc2 = pib2 / populacao2;

    // ======= EXIBE CARTAS =======
    printf("\n=== CARTAS CADASTRADAS ===\n");
    printf("Carta 1 - %s (%s%s)\n", cidade1, estado1, codigo1);
    printf("Popula√ß√£o: %d | √Årea: %.2f | PIB: %.2f | Pontos: %d | Densidade: %.2f | PIB per capita: %.2f\n",
           populacao1, area1, pib1, pontosT1, dens1, ppc1);
    printf("\nCarta 2 - %s (%s%s)\n", cidade2, estado2, codigo2);
    printf("Popula√ß√£o: %d | √Årea: %.2f | PIB: %.2f | Pontos: %d | Densidade: %.2f | PIB per capita: %.2f\n",
           populacao2, area2, pib2, pontosT2, dens2, ppc2);

    // ======= MENUS DE ATRIBUTOS =======
    int opcao1, opcao2;
    printf("\n=== Escolha o PRIMEIRO atributo para comparar ===\n");
    printf("1 - Popula√ß√£o\n");
    printf("2 - √Årea\n");
    printf("3 - PIB\n");
    printf("4 - Pontos tur√≠sticos\n");
    printf("5 - Densidade demogr√°fica\n");
    printf("6 - PIB per capita\n");
    printf("Digite a op√ß√£o: ");
    scanf("%d", &opcao1);

    // Menu din√¢mico (remove a op√ß√£o escolhida)
    printf("\n=== Escolha o SEGUNDO atributo (diferente do primeiro) ===\n");
    for (int i = 1; i <= 6; i++) {
        if (i == opcao1) continue; // n√£o mostra a op√ß√£o j√° escolhida
        switch (i) {
            case 1: printf("1 - Popula√ß√£o\n"); break;
            case 2: printf("2 - √Årea\n"); break;
            case 3: printf("3 - PIB\n"); break;
            case 4: printf("4 - Pontos tur√≠sticos\n"); break;
            case 5: printf("5 - Densidade demogr√°fica\n"); break;
            case 6: printf("6 - PIB per capita\n"); break;
        }
    }
    printf("Digite a op√ß√£o: ");
    scanf("%d", &opcao2);

    // Evita repeti√ß√£o de atributo
    if (opcao1 == opcao2) {
        printf("\n‚ùå Erro: os dois atributos devem ser diferentes!\n");
        return 0;
    }

    // ======= COMPARA√á√ÉO DOS DOIS ATRIBUTOS =======
    float valor1A = 0, valor2A = 0; // valores da carta 1 e 2 para o atributo 1
    float valor1B = 0, valor2B = 0; // valores da carta 1 e 2 para o atributo 2
    float soma1 = 0, soma2 = 0;

    // Fun√ß√£o auxiliar: define valor de cada atributo
    float getValor(int opcao, int carta) {
        switch (opcao) {
            case 1: return (carta == 1 ? populacao1 : populacao2);
            case 2: return (carta == 1 ? area1 : area2);
            case 3: return (carta == 1 ? pib1 : pib2);
            case 4: return (carta == 1 ? pontosT1 : pontosT2);
            case 5: return (carta == 1 ? dens1 : dens2);
            case 6: return (carta == 1 ? ppc1 : ppc2);
            default: return 0;
        }
    }

    valor1A = getValor(opcao1, 1);
    valor2A = getValor(opcao1, 2);
    valor1B = getValor(opcao2, 1);
    valor2B = getValor(opcao2, 2);

    // Regra: maior vence, exceto densidade (menor vence)
    float resultado1 = (opcao1 == 5) ? (valor1A < valor2A) : (valor1A > valor2A);
    float resultado2 = (opcao2 == 5) ? (valor1B < valor2B) : (valor1B > valor2B);

    // Soma de acordo com os resultados (usando operador tern√°rio)
    soma1 = valor1A + valor1B;
    soma2 = valor2A + valor2B;

    // ======= RESULTADOS =======
    printf("\n=== RESULTADO FINAL ===\n");
    printf("Atributo 1 escolhido: ");
    switch (opcao1) {
        case 1: printf("Popula√ß√£o\n"); break;
        case 2: printf("√Årea\n"); break;
        case 3: printf("PIB\n"); break;
        case 4: printf("Pontos tur√≠sticos\n"); break;
        case 5: printf("Densidade demogr√°fica\n"); break;
        case 6: printf("PIB per capita\n"); break;
    }

    printf("Atributo 2 escolhido: ");
    switch (opcao2) {
        case 1: printf("Popula√ß√£o\n"); break;
        case 2: printf("√Årea\n"); break;
        case 3: printf("PIB\n"); break;
        case 4: printf("Pontos tur√≠sticos\n"); break;
        case 5: printf("Densidade demogr√°fica\n"); break;
        case 6: printf("PIB per capita\n"); break;
    }

    // Exibe valores e soma
    printf("\n%s: %.2f e %.2f | Soma: %.2f\n", cidade1, valor1A, valor1B, soma1);
    printf("%s: %.2f e %.2f | Soma: %.2f\n", cidade2, valor2A, valor2B, soma2);

    // Determina vencedor
    (soma1 > soma2) ? printf("\nüèÜ Vencedora: %s!\n", cidade1)
    : (soma2 > soma1) ? printf("\nüèÜ Vencedora: %s!\n", cidade2)
    : printf("\nü§ù Empate!\n");

    return 0;
}
